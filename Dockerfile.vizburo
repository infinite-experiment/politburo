# Multi-stage build for Vizburo UI service
# Stage 1: Build Tailwind CSS
FROM node:20-alpine AS tailwind-builder

WORKDIR /app

# Copy Tailwind configuration and package files
COPY package.json tailwind.config.ts ./
COPY internal/static/css/input.css ./internal/static/css/

# Install dependencies and build Tailwind CSS
RUN npm install --omit=dev && \
    npm run build:tailwind && \
    rm -rf node_modules

# Stage 2: Build Go application (Vizburo UI service)
FROM golang:1.22-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY cmd ./cmd
COPY internal ./internal
COPY vizburo ./vizburo

# Copy Tailwind CSS output from previous stage
COPY --from=tailwind-builder /app/vizburo/ui/static/css/tailwind.css ./vizburo/ui/static/css/

# Build the application (vizburo service)
RUN CGO_ENABLED=0 GOOS=linux go build \
    -ldflags="-w -s" \
    -o /app/vizburo \
    ./cmd/vizburo

# Stage 3: Runtime image
FROM alpine:latest

WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1000 appuser && \
    adduser -D -u 1000 -G appuser appuser

# Copy binary from builder
COPY --from=builder /app/vizburo /app/vizburo

# Copy templates and static assets
COPY --from=builder /app/internal/templates ./internal/templates
COPY --from=builder /app/internal/static ./internal/static

# Change ownership
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port 3000 for Vizburo UI
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:3000/ui/api/health || exit 1

# Run the application on port 3000
CMD ["./vizburo"]
